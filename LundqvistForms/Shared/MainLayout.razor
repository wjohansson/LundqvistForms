@using LundqvistForms.Components
@inherits LayoutComponentBase

<PageTitle>LundqvistForms</PageTitle>

<MudThemeProvider IsDarkMode="true" Theme="customTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Color="Color.Primary" Dense="true">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        Lundqvist Forms
        <MudSpacer />
        <MudTooltip Text="Ändra tema" Arrow="true" Color="Color.Primary" Placement="Placement.Bottom">
            <MudIconButton Icon="@Icons.Material.Filled.Palette" Edge="Edge.End" Color="Color.Inherit" Class="mx-2" OnClick="@((e) => ThemeToggle())" />
        </MudTooltip>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" Anchor="Anchor.Start" Variant="@DrawerVariant.Temporary">
        <NavMenu />
    </MudDrawer>
    <MudDrawer @bind-Open="@_themeOpen" Anchor="Anchor.End" Variant="@DrawerVariant.Temporary">
        <ThemePicker ThemeChanged="Update" CustomTheme="customTheme" />
    </MudDrawer>

    <MudMainContent>
        <MudMainContent>
            @Body
        </MudMainContent>
    </MudMainContent>
</MudLayout>

<style>
    body {
        background-color: @($"{Colors.Grey.Darken4}");
    }
</style>

@code {
    bool _drawerOpen = false;
    bool _themeOpen = false;
    bool _darkMode = true;
    MudTheme customTheme = new();

    protected override async Task OnInitializedAsync()
    {
        customTheme.PaletteDark.Primary = "#ffa800ff";
    }
    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    void ThemeToggle()
    {
        _themeOpen = !_themeOpen;
    }

    void Update()
    {
        StateHasChanged();
    }
}
