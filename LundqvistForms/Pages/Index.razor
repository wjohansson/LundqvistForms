@page "/"

@using FormsLibrary.Models;
@using LundqvistForms.Components

<PageTitle>Lundqvist Forms</PageTitle>
<MudPaper Width="100%" Class="d-flex flex-column align-center gap-2 pb-4" Elevation="0" Style="@($"background-color: {Colors.Grey.Darken3};")">
    @foreach (FormModel chapter in chapters)
    {
        <MudContainer Class="d-flex gap-2 mx-0 justify-center">
            <MudContainer MaxWidth="MaxWidth.Small" @onclick="@(() => FocusChapter(chapter))" Class="d-flex flex-column gap-2 rounded-3 pa-4 ma-0 rounded" Style="@($"background-color: {Colors.Grey.Darken2}; border-left: 4px solid {CheckFocus(chapter)};")">
                <SectionHeader IsFocused="@(currentChapter == chapter)"></SectionHeader>
                <Questions Chapter="@chapter"></Questions>
            </MudContainer>
            @if (chapter == currentChapter)
            {
                <Controls OnQuestionAdded="@(() => AddQuestion(currentChapter))" OnSectionAdded="@AddSection"></Controls>
            }
        </MudContainer>

    }
    <MudContainer Class="d-flex justify-center gap-2">
        <MudTooltip Arrow="true" Placement="Placement.Right">
            <MudButton Variant="Variant.Filled" Color="Color.Warning" OnClick="CreateForm" StartIcon="@Icons.Material.Filled.AddCircle" Size="Size.Large">Skapa enkät</MudButton>
        </MudTooltip>
        <MudTooltip Arrow="true" Placement="Placement.Right">
            <MudButton Variant="Variant.Outlined" Color="Color.Warning" OnClick="DeleteForm" StartIcon="@Icons.Material.Filled.Delete" Size="Size.Large">Radera enkät</MudButton>
        </MudTooltip>
    </MudContainer>
</MudPaper>

@code {
    // TODO: Flytta controls knapparna så att dom följer med aktiva avstnittet med animation
    // TODO: Fixa vid focus av dropdowns att texten i fälten blir på samma ställe som dropdown
    // TODO: Fixa så att hela formen sparas ifall man skulle refresha sidan
    // TODO: Kunna radera på alla steg. Enskild fråga, enskilt avsnitt och hela formuläret
    // TODO: Fixa expand och collapse på avsnitt
    private List<FormModel> chapters = new();
    private FormModel currentChapter = new();
    private string borderColor = Colors.Grey.Darken2;

    protected override async Task OnInitializedAsync()
    {
        AddSection();
    }

    public void AddQuestion(FormModel chapter)
    {
        chapter.Components.Add(new QuestionModel());
    }

    public void AddSection()
    {
        FormModel newForm = new();
        chapters.Add(newForm);
        currentChapter = newForm;
    }

    public void FocusChapter(FormModel chapter)
    {
        currentChapter = chapter;
        borderColor = Colors.Grey.Lighten5;
    }

    public string CheckFocus(FormModel chapter)
    {
        if (currentChapter == chapter)
        {
            return Colors.Grey.Lighten5;
        }
        return Colors.Grey.Darken2;
    }

    public async Task CreateForm()
    {
    }

    public async Task DeleteForm()
    {
        chapters = new();
        AddSection();
    }
}