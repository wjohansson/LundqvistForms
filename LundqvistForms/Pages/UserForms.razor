@page "/forms"

@using FormsLibrary.Models;
@using LundqvistForms.Components;
@using LundqvistForms.Services;
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@inject FormServiceUi formService
@inject NavigationManager navigationManager;
@inject IDialogService DialogService;
@inject ISnackbar Snackbar
@inject ProtectedLocalStorage BrowserStorage


<MudPaper Class="mx-16 pa-10 mb-16" Style="@($"background-color: {Colors.Grey.Darken3}")">
    @if (forms == null)
    {
        <MudButton Typo="Typo.h2">
            <MudProgressCircular Class="ms-n1" Size="Size.Large" Indeterminate="true" />
            <MudText Typo="Typo.h3" Class="ms-2">Laddar...</MudText>
        </MudButton>
    }
    else if (forms.Count == 0)
    {
        <MudText Typo="Typo.h2">Du har inga formulär just nu</MudText>
    }
    else
    {
        <MudText Typo="Typo.h2" Class="mb-4">Dina formulär</MudText>
        <MudTable Items="forms"
              GroupHeaderStyle="@($"background-color: {Colors.Grey.Darken1}")"
                CustomHeader
              Hover="true"
              LoadingProgressColor="Color.Warning"
              Class="mx-12 pa-4"
              Style="@($"background-color: {Colors.Grey.Darken2}")">
        <HeaderContent>
            <MudTh Style="font-size: 24px">Titel</MudTh>
            <MudTh Style="font-size: 24px">Antal frågor</MudTh>
            <MudTh Style="font-size: 24px">Antal svar</MudTh>
            <MudTh Style="width: 200px"></MudTh>
        </HeaderContent>
        <RowTemplate>
            @if (context != null)
                {
                    CountAnswers(context);
                    <MudTd DataLabel="Title">@context.FormTitle</MudTd>
                    <MudTd DataLabel="Antal frågor">@CountQuestions(context)</MudTd>
                    <MudTd DataLabel="Antal svar">@CountAnswers(context)</MudTd>
                    <MudTd DataLabel="" Class="d-flex justify-end gap-2">
                        <MudTooltip Text="Statistik"
                            Style="@($"background-color: {Colors.Grey.Darken3}")"
                            Arrow="true"
                            Placement="Placement.Bottom">
                            <MudIconButton Icon="@Icons.Material.Filled.InsertChart"
                                   Variant="Variant.Outlined"
                                   OnClick="@(() => GoToStatistics(context))"
                                   Color="Color.Default" />
                        </MudTooltip>
                        <MudTooltip Text="Förhandsgranska"
                            Style="@($"background-color: {Colors.Grey.Darken3}")"
                            Arrow="true"
                            Placement="Placement.Bottom">
                            <MudIconButton Icon="@Icons.Material.Filled.RemoveRedEye"
                                   Variant="Variant.Outlined"
                                   OnClick="@(() => GoToPreview(context))"
                                   Color="Color.Warning" />
                        </MudTooltip>
                        <MudTooltip Text="Regidera"
                            Style="@($"background-color: {Colors.Grey.Darken3}")"
                            Arrow="true"
                            Placement="Placement.Bottom">
                            <MudIconButton Icon="@Icons.Material.Filled.Edit"
                                   Variant="Variant.Filled"
                                   OnClick="@(() => EditForm(context))"
                                   Color="Color.Warning" />
                        </MudTooltip>
                        <MudTooltip Text="Ta bort"
                            Style="@($"background-color: {Colors.Grey.Darken3}")"
                            Arrow="true"
                            Placement="Placement.Bottom">
                            <MudIconButton Icon="@Icons.Material.Filled.DeleteForever"
                                   Variant="Variant.Filled"
                                   OnClick="@(() => DeleteForm(context))"
                                   Color="Color.Error" />
                        </MudTooltip>
                    </MudTd>
                }

            </RowTemplate>
        </MudTable>
    }
</MudPaper>

<MudMessageBox @ref="deleteFormBox" Title="Ta bort formulär" CancelText="Avbryt">
    <MessageContent>
        Är du säker att du vill ta bort formuläret?
    </MessageContent>
    <YesButton>
        <MudButton Variant="Variant.Filled" Color="Color.Error">Ta bort</MudButton>
    </YesButton>
</MudMessageBox>


@code {
    // TODO: Kolla table filtrering med mera
    // TODO: Fixa sortering på användares formulär på UserForms

    public List<FormModel>? forms = null;
    private MudMessageBox? deleteFormBox { get; set; }
    private Dictionary<Guid, int?> answersCount = new();
    private string deleteFormMessage = "Formulär borttaget";

    protected override async Task OnInitializedAsync()
    {
        forms = await formService.GetAllForms();

        foreach (FormModel form in forms)
        {
            answersCount[form.FormId] = await formService.CountAnswers(form);
        }
    }

    private int CountQuestions(FormModel form)
    {
        var count = 0;

        foreach (SegmentModel segment in form.Segments.ToList())
        {
            count += segment.Questions.Count;
        }

        return count;
    }

    private int? CountAnswers(FormModel form)
    {
        return answersCount[form.FormId];
    }

    private void GoToStatistics(FormModel form)
    {
        navigationManager.NavigateTo($"/forms/statistics/{form.FormId}");
    }

    private void GoToPreview(FormModel form)
    {
        navigationManager.NavigateTo($"/forms/preview/{form.FormId}");
    }

    private void EditForm(FormModel form)
    {
        navigationManager.NavigateTo($"/forms/edit/{form.FormId}");
    }

    private async void DeleteForm(FormModel form)
    {
        bool? result = await deleteFormBox.Show();

        if (result == null || result == false)
        {
            return;
        }

        await formService.DeleteForm(form);
        forms = await formService.GetAllForms();
        Snackbar.Add(deleteFormMessage, Severity.Info);

        StateHasChanged();
    }
}
