@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using FormsLibrary.Models;
@inject ProtectedLocalStorage BrowserStorage;

<MudContainer MaxWidth="MaxWidth.Medium">
    <EditForm Model="Form">
        <DataAnnotationsValidator />
        <MudCard Elevation="0">
            <MudCardContent Class="rounded" Style="@($"background-color: {Colors.Grey.Darken4};")">
                <MudTextField Placeholder="Formulär rubrik..."
                              @bind-Value="Form.FormTitle"
                              For="@(() => Form.FormTitle)"
                              Style="font-size: 24px"
                              Clearable="true" />
                <MudTextField Placeholder="Formulär beskrivning..."
                              @bind-Value="Form.FormDescription"
                              For="@(() => Form.FormDescription)"
                              Class="mx-2"
                              Clearable="true" />
            </MudCardContent>
        </MudCard>
    </EditForm>
</MudContainer>

@code {
    [Parameter]
    public FormModel Form { get; set; } = new();

    [Parameter]
    public string FormType { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender && FormType == "LundqvistForms.Pages.Index")
        {
            await BrowserStorage.GetAsync<FormModel>("form");
        }
        else if (firstRender && FormType == "LundqvistForms.Pages.EditCurrentForm")
        {
            await BrowserStorage.GetAsync<FormModel>("editForm");
        }
        else if (FormType == "LundqvistForms.Pages.Index")
        {
            await BrowserStorage.SetAsync("form", Form);
        }
        else if (FormType == "LundqvistForms.Pages.EditCurrentForm")
        {
            await BrowserStorage.SetAsync("editForm", Form);
        }
    }
}
